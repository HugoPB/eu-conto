@model EuConto.Models.Story.ChapterModel
@using EuConto.Models.Story

<div class="container" style="margin-top: 100px;">
    <section>
        <div class="row mx-1">
            <div class="col-md-12 mb-5">
                <div class="card card-cascade wider reverse">
                    <div class="view overlay">
                        <img class="card-img-top" src="https://mdbootstrap.com/img/Photos/Slides/img%20(70).jpg" alt="Card image cap">
                        <a href="@Url.RouteUrl("UserStoryChapters", new { storyId = Model.Story.Id })">
                            <div class="mask rgba-white-slight waves-effect waves-light"></div>
                        </a>
                    </div>

                    <div class="card-body card-body-cascade text-center">
                        <h5 class="dark-grey-text pb-2 pt-1"><i class="fas fa-archive mr-2"></i> < @Model.Story.Gender ></h5>

                        <h4 class="card-title"><strong>@Model.Story.Title</strong></h4>

                        <p class="card-text">
                            @Model.Story.Description
                        </p>
                    </div>

                    <div class="container">
                        <section>
                            @if (Model.IsEditable)
                            {
                                <section>
                                    <div class="row mx-1">
                                        <div class="col-md-12 mb-4 text-center">
                                            <a class="btn btn-outline-black btn-rounded waves-effect" onclick="location.href='@Url.RouteUrl("UserStoryChapterSectionsCreateEdit", new { storyId = Model.Story.Id, chapterId = '0' })'"> <i class="fas fa-book-medical mr-2"></i> Criar novo Capítulo </a>
                                        </div>
                                    </div>
                                </section>
                            }

                            <h2><strong>Capítulos</strong></h2>

                            @if (Model.Chapters.Count > 0)
                            {
                                foreach (StoryChapters Chapter in Model.Chapters)
                                {
                                    <div class="row mx-1">
                                        <div class="col-md-12 mb-5">
                                            <div class="card card-cascade wider reverse">
                                                <div class="card-body card-body-cascade text-center">
                                                    <h4 class="card-title"><strong>@Chapter.Title</strong></h4>

                                                    <p class="card-text">
                                                        @Chapter.Description
                                                    </p>

                                                    @if (Model.IsEditable)
                                                    {
                                                        <a class="btn btn-outline-black float-md-right waves-effect" href="@Url.RouteUrl("UserStoryChapterSectionsDelete", new { storyId = Model.Story.Id, chapterId = Chapter.Id })"><i class="fas fa-book mr-2"></i> Excluir</a>
                                                        <a class="btn btn-outline-black float-md-right waves-effect" href="@Url.RouteUrl("UserStoryChapterSectionsCreateEdit", new { storyId = Model.Story.Id, chapterId = Chapter.Id })"><i class="fas fa-book mr-2"></i> Editar</a>
                                                        <a class="btn btn-outline-black float-md-right waves-effect" href="@Url.RouteUrl("UserStoryChapterSectionsRead", new { storyId = Model.Story.Id, chapterId = Chapter.Id })"><i class="fas fa-book mr-2"></i> Ler</a>
                                                    }
                                                    else
                                                    {
                                                        <a class="btn btn-outline-black float-md-right waves-effect" href="@Url.RouteUrl("UserStoryChapterSectionsRead", new { storyId = Model.Story.Id, chapterId = Chapter.Id })"><i class="fas fa-book mr-2"></i> Ler</a>
                                                    }
                                                </div>

                                                <div class="rounded-bottom black text-center pt-3">
                                                    <ul class="list-unstyled list-inline font-small">
                                                        @if (Chapter.Published)
                                                        {
                                                            <li class="list-inline-item pr-2 white-text"><i class="far fa-clock pr-1"></i>Publicado em - @Chapter.DtLastPublish</li>
                                                        }
                                                        else
                                                        {
                                                            <li class="list-inline-item pr-2 white-text"><i class="far fa-clock pr-1"></i>Não Publicado</li>
                                                        }
                                                        <li class="list-inline-item">
                                                            <a href="#" class="white-text" onclick="event.preventDefault(); ActionLikeChapter('@Chapter.Id');">
                                                                <i class="@if (Chapter.Liked) { @Html.Raw("fas") } else { @Html.Raw("far") } fa-hand-peace pr-1" id="LikeIcon"></i>
                                                                <span id="ActionLike">@Chapter.Likes</span>
                                                            </a>
                                                        </li>
                                                        <li class="list-inline-item pr-2"><a href="#" class="white-text"><i class="far fa-comments pr-1"></i>@Chapter.Comentaries</a></li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <h5>Esta parte não deveria estar vazia... o que está esperando ?</h5>
                            }
                        </section>
                    </div>                    
                </div>
            </div>
        </div>
    </section>
</div>